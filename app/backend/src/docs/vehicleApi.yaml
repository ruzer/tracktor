paths:
  /api/vehicles:
    post:
      tags:
        - Vehicle Management
      summary: Add a new vehicle.
      security:
        - UserPinAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - make
                - model
                - year
                - licensePlate
              properties:
                make:
                  type: string
                  example: "Toyota"
                model:
                  type: string
                  example: "Camry"
                year:
                  type: number
                  example: 2020
                licensePlate:
                  type: string
                  example: "ABC-123"
                vin:
                  type: string
                  example: "1A2B3C4D5E6F7G8H9"
                color:
                  type: string
                  example: "Red"
                odometer:
                  type: number
                  example: 50000
      responses:
        '201':
          description: Vehicle added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  message:
                    type: string
        '400':
          description: Missing required fields.
        '401':
          description: Unauthorized (Invalid PIN).
        '409':
          description: Vehicle with this license plate or VIN already exists.
        '500':
          description: Server error.
    get:
      tags:
        - Vehicle Management
      summary: Get all vehicles.
      security:
        - UserPinAuth: []
      responses:
        '200':
          description: A list of vehicles.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    make:
                      type: string
                    model:
                      type: string
                    year:
                      type: number
                    licensePlate:
                      type: string
                    vin:
                      type: string
                    color:
                      type: string
                    odometer:
                      type: number
        '401':
          description: Unauthorized (Invalid PIN).
        '500':
          description: Server error.
  /api/vehicles/{id}:
    get:
      tags:
        - Vehicle Management
      summary: Get a single vehicle by ID.
      security:
        - UserPinAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The vehicle ID.
      responses:
        '200':
          description: Vehicle data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  make:
                    type: string
                  model:
                    type: string
                  year:
                    type: number
                  licensePlate:
                    type: string
                  vin:
                    type: string
                  color:
                    type: string
                  odometer:
                    type: number
        '401':
          description: Unauthorized (Invalid PIN).
        '404':
          description: Vehicle not found.
        '500':
          description: Server error.
    put:
      tags:
        - Vehicle Management
      summary: Update a vehicle by ID.
      security:
        - UserPinAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The vehicle ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - make
                - model
                - year
                - licensePlate
              properties:
                make:
                  type: string
                  example: "Toyota"
                model:
                  type: string
                  example: "Camry"
                year:
                  type: number
                  example: 2020
                licensePlate:
                  type: string
                  example: "ABC-123"
                vin:
                  type: string
                  example: "1A2B3C4D5E6F7G8H9"
                color:
                  type: string
                  example: "Red"
                odometer:
                  type: number
                  example: 50000
      responses:
        '200':
          description: Vehicle updated successfully.
        '400':
          description: Missing required fields.
        '401':
          description: Unauthorized (Invalid PIN).
        '404':
          description: Vehicle not found.
        '409':
          description: Vehicle with this license plate or VIN already exists.
        '500':
          description: Server error.
    delete:
      tags:
        - Vehicle Management
      summary: Delete a vehicle by ID.
      security:
        - UserPinAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The vehicle ID.
      responses:
        '200':
          description: Vehicle deleted successfully.
        '401':
          description: Unauthorized (Invalid PIN).
        '404':
          description: Vehicle not found.
        '500':
          description: Server error.